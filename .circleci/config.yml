jobs:
  danger:
    docker:
    - image: node:erbium-alpine
    steps:
    - checkout
    - run:
        command: |-
          yarn install
          yarn danger ci
        name: Danger
  homepage_build:
    docker:
    - image: vroom/mlp:3.0.1
    steps:
    - checkout
    - setup_remote_docker:
        version: 18.09.3
    - run:
        command: build -a vroom-web/apps/homepage/docker
  homepage_deploy:
    docker:
    - image: vroom/mlp:3.0.1
    parameters:
      env:
        type: string
      s3:
        type: string
    steps:
    - checkout
    - setup_remote_docker:
        version: 18.09.3
    - run:
        command: |-
          sudo apt-get install python-pip && pip install awscli

          aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*.webp' --exclude '*.mp4'
          aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*' --include '*.webp' --content-type 'image/webp'
          aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*' --include '*.mp4' --content-type 'video/mp4'

          login
          deploy -a vroom-web/apps/homepage/docker -n << parameters.env >>
  homepage_prod:
    docker:
    - image: vroom/mlp:2.0
    parameters:
      env:
        type: string
      s3:
        type: string
    steps:
    - checkout
    - setup_remote_docker:
        version: 18.09.3
    - run:
        command: |-
          sudo apt-get install python-pip && pip install awscli

          aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*.webp' --exclude '*.mp4'
          aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*' --include '*.webp' --content-type 'image/webp'
          aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*' --include '*.mp4' --content-type 'video/mp4'

          build ./apps/homepage/docker
          deploy << parameters.env >> ./apps/homepage/docker

          sleep 240

          if [ -z "${FASTLY_PURGE_KEY}" ]; then echo "FASTLY_PURGE_KEY not set"; return 1; elif [ -z "${FASTLY_SERVICE_ID}" ]; then echo "FASTLY_SERVICE_ID not set"; return 1; else echo "Purging Fastly for service ${FASTLY_SERVICE_ID}"; curl -X POST -H "Fastly-Key: ${FASTLY_PURGE_KEY}" -H "Accept: application/json" https://api.fastly.com/service/${FASTLY_SERVICE_ID}/purge_all ; fi
  lint:
    docker:
    - image: circleci/node:erbium
    steps:
    - checkout
    - run:
        command: |-
          yarn install --silent
          yarn workspaces run lint
        name: Lint
  sonarcloud:
    docker:
    - image: circleci/node:erbium-browsers
    steps:
    - checkout
    - run:
        command: |-
          # Bootstrap yarn workspaces.
          yarn install --silent

          # Build libraries.
          yarn workspace @vroom-web/analytics-integration build
          yarn workspace @vroom-web/deals-v2-networking build
          yarn workspace @vroom-web/inv-search-networking build
          yarn workspace @vroom-web/ui build
          yarn workspace @vroom-web/header-components build
          yarn workspace @vroom-web/footer-components build

          # Build the main app.
          yarn workspace @vroom-web/homepage build
    - sonarcloud/scan
orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.1
version: 2.1
workflows:
  homepage:
    jobs:
    - sonarcloud:
        context: SonarCloud
    - danger:
        context: dangerjs
    - lint
    - homepage_build:
        context: aws-non-prod
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^homepage-v.*/
    - hold:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^homepage-v.*/
        matrix:
          parameters:
            env:
            - dev
            - qa
            - uat
        name: hold_<< matrix.env >>
        requires:
        - homepage_build
        type: approval
    - homepage_deploy:
        context: aws-non-prod
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^homepage-v.*/
        matrix:
          parameters:
            env:
            - dev
            - qa
            - uat
        name: homepage_deploy_<< matrix.env >>
        requires:
        - hold_<< matrix.env >>
        s3: s3://homepage-assets-<< matrix.env >>.n.vroom.systems
    - hold:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^homepage-v.*/
        name: hold_prod
        requires:
        - homepage_deploy_dev
        - homepage_deploy_qa
        - homepage_deploy_uat
        type: approval
    - homepage_prod:
        context: aws-prod
        env: prod
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^homepage-v.*/
        name: homepage_deploy_prod
        requires:
        - hold_prod
        s3: s3://homepage-assets-prod.p.vroom.systems
  version: 2

