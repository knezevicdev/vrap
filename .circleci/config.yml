version: 2.1
jobs:
  sonarcloud:
    docker:
      - image: circleci/node:erbium-browsers
    steps:
      - checkout
      - run:
          command: |-
            # Bootstrap yarn workspaces.
            yarn install --silent

            # Build libraries.
            yarn workspace @vroom-web/analytics-integration build
            yarn workspace @vroom-web/deals-v2-networking build
            yarn workspace @vroom-web/inv-search-networking build
            yarn workspace @vroom-web/ui build
            yarn workspace @vroom-web/header-components build
            yarn workspace @vroom-web/footer-components build

            # Build the main app.
            yarn workspace @vroom-web/homepage build
      - sonarcloud/scan
  danger:
    docker:
      - image: node:erbium-alpine
    steps:
      - checkout
      - run:
          name: Danger
          command: |-
            yarn install
            yarn danger ci
  lighthouse:
    docker:
      - image: circleci/node:erbium-browsers
    steps:
      - checkout
      - run:
          command: |-
            # Bootstrap yarn workspaces.
            yarn install --silent

            # Build libraries.
            yarn workspace @vroom-web/analytics-integration build
            yarn workspace @vroom-web/deals-v2-networking build
            yarn workspace @vroom-web/inv-search-networking build
            yarn workspace @vroom-web/ui build
            yarn workspace @vroom-web/header-components build
            yarn workspace @vroom-web/footer-components build

            # Build the main app.
            yarn workspace @vroom-web/homepage build

            nohup yarn workspace @vroom-web/homepage start --port 8080 & sleep 5

            yarn global add @lhci/cli@0.3.x
            cd apps/homepage
            /home/circleci/.yarn/bin/lhci autorun
  lint:
    docker:
      - image: circleci/node:erbium
    steps:
      - checkout
      - run:
          command: |-
              # Bootstrap yarn workspaces.
              yarn install --silent

              yarn workspaces run lint
  homepage_non_prod: &mlp
    docker:
      - image: vroom/mlp:3.0.1
    parameters:
      env:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          command: |-
            sudo apt-get install python-pip && pip install awscli

            aws s3 sync ./apps/homepage/public s3://homepage-assets-<< parameters.env >>.n.vroom.systems --acl public-read --exclude '*.webp' --exclude '*.mp4'
            aws s3 sync ./apps/homepage/public s3://homepage-assets-<< parameters.env >>.n.vroom.systems --acl public-read --exclude '*' --include '*.webp' --content-type 'image/webp'
            aws s3 sync ./apps/homepage/public s3://homepage-assets-<< parameters.env >>.n.vroom.systems --acl public-read --exclude '*' --include '*.mp4' --content-type 'video/mp4'

            build -a vroom-web/apps/homepage/docker
            deploy -a vroom-web/apps/homepage/docker -n << parameters.env >>
  homepage_prod: &mlp
    docker:
      - image: vroom/mlp:3.0.1
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          command: echo "Hello World"
          # command: |-
          #   sudo apt-get install python-pip && pip install awscli

          #   NAME_SPACE=${CIRCLE_TAG%-v*}
          #   ENV=${NAME_SPACE#homepage-}

          #   aws s3 sync ./apps/homepage/public s3://homepage-assets-${ENV}.p.vroom.systems --acl public-read --exclude '*.webp' --exclude '*.mp4'
          #   aws s3 sync ./apps/homepage/public s3://homepage-assets-${ENV}.p.vroom.systems --acl public-read --exclude '*' --include '*.webp' --content-type 'image/webp'
          #   aws s3 sync ./apps/homepage/public s3://homepage-assets-${ENV}.p.vroom.systems --acl public-read --exclude '*' --include '*.mp4' --content-type 'video/mp4'

          #   build -a vroom-web/apps/homepage/docker
          #   deploy -a vroom-web/apps/homepage/docker -n ${ENV}
orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.1
workflows:
  version: 2
  homepage:
    jobs:
      - sonarcloud:
          context: SonarCloud
      - danger:
          context: dangerjs
      - lighthouse:
          context: aws-prod
      - lint
      - hold:
          name: hold_<< matrix.env >>
          matrix:
            parameters:
              env: ["dev", "qa", "uat", "prod"]
          type: approval
          filters:
            tags:
              only: /^homepage-v.*/
            branches:
              ignore: /.*/
      - homepage_non_prod:
          context: aws-non-prod
          matrix:
            parameters:
              env: ["dev", "qa", "uat"]
          requires:
            - hold_<< matrix.env >>
          filters:
            tags:
              only: /^homepage-v.*/
            branches:
              ignore: /.*/
      - homepage_prod:
          context: aws-prod
          requires:
            - hold_prod
          filters:
            tags:
              only: /^homepage-v.*/
            branches:
              ignore: /.*/
