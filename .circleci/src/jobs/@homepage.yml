sonarcloud:
  docker:
  - image: circleci/node:erbium-browsers
  steps:
    - checkout
    - run:
        command: |-
          # Bootstrap yarn workspaces.
          yarn install --silent

          # Build libraries.
          yarn workspace @vroom-web/analytics-integration build
          yarn workspace @vroom-web/deals-v2-networking build
          yarn workspace @vroom-web/inv-search-networking build
          yarn workspace @vroom-web/ui build
          yarn workspace @vroom-web/header-components build
          yarn workspace @vroom-web/footer-components build

          # Build the main app.
          yarn workspace @vroom-web/homepage build
    - sonarcloud/scan
homepage_build:
  docker:
  - image: vroom/mlp:3.0.1
  parameters:
    s3:
      type: string
  steps:
    - checkout
    - setup_remote_docker:
        version: 18.09.3
    - run:
        command: |-
          build -a vroom-web/apps/homepage/docker

          SHORT_HASH=$(git rev-parse --short HEAD)

          IMAGE_ID=$(docker images --filter=reference='*/vroom-web/apps/homepage/docker' --format "{{.ID}}" | head -1)
          docker run --cidfile ./docker.cid $IMAGE_ID /bin/ash
          CID=$(cat docker.cid)
          docker cp $CID:/www/apps/homepage/.next ./apps/homepage/

          aws s3 sync ./apps/homepage/.next/static << parameters.s3 >>/$SHORT_HASH/.next/static --acl public-read
          aws s3 sync ./apps/homepage/public << parameters.s3 >>/$SHORT_HASH/public --acl public-read --exclude '*.webp' --exclude '*.mp4'
          aws s3 sync ./apps/homepage/public << parameters.s3 >>/$SHORT_HASH/public --acl public-read --exclude '*' --include '*.webp' --content-type 'image/webp'
          aws s3 sync ./apps/homepage/public << parameters.s3 >>/$SHORT_HASH/public --acl public-read --exclude '*' --include '*.mp4' --content-type 'video/mp4'
homepage_deploy:
  docker:
  - image: vroom/mlp:3.0.1
  parameters:
    env:
      type: string
  steps:
    - checkout
    - setup_remote_docker:
        version: 18.09.3
    - run:
        command: |-
          login
          deploy -a vroom-web/apps/homepage/docker -n << parameters.env >>
# FIT-541
# This is a stopgap until we can figure out how to deploy to prod using MLP 3.
homepage_prod:
  docker:
  - image: vroom/mlp:2.0
  parameters:
    env:
      type: string
    s3:
      type: string
  steps:
    - checkout
    - setup_remote_docker:
        version: 18.09.3
    - run:
        command: |-
          sudo apt-get install python-pip && pip install awscli

          aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*.webp' --exclude '*.mp4'
          aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*' --include '*.webp' --content-type 'image/webp'
          aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*' --include '*.mp4' --content-type 'video/mp4'

          build ./apps/homepage/docker
          deploy << parameters.env >> ./apps/homepage/docker

          sleep 240

          if [ -z "${FASTLY_PURGE_KEY}" ]; then echo "FASTLY_PURGE_KEY not set"; return 1; elif [ -z "${FASTLY_SERVICE_ID}" ]; then echo "FASTLY_SERVICE_ID not set"; return 1; else echo "Purging Fastly for service ${FASTLY_SERVICE_ID}"; curl -X POST -H "Fastly-Key: ${FASTLY_PURGE_KEY}" -H "Accept: application/json" https://api.fastly.com/service/${FASTLY_SERVICE_ID}/purge_all ; fi