jobs:
  sonarcloud:
    docker:
    - image: circleci/node:erbium-browsers
    steps:
      - checkout
      - run:
          command: |-
            # Bootstrap yarn workspaces.
            yarn install --silent

            # Build libraries.
            yarn workspace @vroom-web/analytics-integration build
            yarn workspace @vroom-web/deals-v2-networking build
            yarn workspace @vroom-web/inv-search-networking build
            yarn workspace @vroom-web/ui build
            yarn workspace @vroom-web/header-components build
            yarn workspace @vroom-web/footer-components build

            # Build the main app.
            yarn workspace @vroom-web/homepage build
      - sonarcloud/scan

  homepage_build:
    docker:
    - image: vroom/mlp:3.0.1
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          command: |-
            build -a vroom-web/apps/homepage/docker

  homepage_deploy:
    docker:
    - image: vroom/mlp:3.0.1
    parameters:
      env:
        type: string
      s3:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          command: |-
            sudo apt-get install python-pip && pip install awscli

            aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*.webp' --exclude '*.mp4'
            aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*' --include '*.webp' --content-type 'image/webp'
            aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*' --include '*.mp4' --content-type 'video/mp4'

            login
            deploy -a vroom-web/apps/homepage/docker -n << parameters.env >>

    # homepage_release:
    #   docker:
    #   - image: vroom/mlp:3.0.1
    #   steps:
    #     - checkout
    #     - setup_remote_docker:
    #         version: 18.09.3
    #     - run:
    #         command: |-
    #           sudo apt-get install python-pip && pip install awscli

    #           aws s3 sync ./apps/homepage/public s3://homepage-assets-prod.p.vroom.systems --acl public-read --exclude '*.webp' --exclude '*.mp4'
    #           aws s3 sync ./apps/homepage/public s3://homepage-assets-prod.p.vroom.systems --acl public-read --exclude '*' --include '*.webp' --content-type 'image/webp'
    #           aws s3 sync ./apps/homepage/public s3://homepage-assets-prod.p.vroom.systems --acl public-read --exclude '*' --include '*.mp4' --content-type 'video/mp4'

    #           login
    #           release -a vroom-web/apps/homepage/docker -n uat

  # FIT-541
  # This is a stopgap until we can figure out how to deploy to prod using MLP 3.
  homepage_prod:
    docker:
      - image: vroom/mlp:2.0
    parameters:
      env:
        type: string
      s3:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          command: |-
            sudo apt-get install python-pip && pip install awscli

            aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*.webp' --exclude '*.mp4'
            aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*' --include '*.webp' --content-type 'image/webp'
            aws s3 sync ./apps/homepage/public << parameters.s3 >> --acl public-read --exclude '*' --include '*.mp4' --content-type 'video/mp4'

            build ./apps/homepage/docker
            deploy << parameters.env >> ./apps/homepage/docker
workflows:
  homepage:
    jobs:
    - sonarcloud:
        context: SonarCloud
    - danger:
        context: dangerjs
    - lint
    - homepage_build:
        context: aws-non-prod
        filters:
          tags:
            only: /^homepage-v.*/
          branches:
            ignore: /.*/
    - hold:
        name: hold_<< matrix.env >>
        type: approval
        matrix:
          parameters:
            env: ["dev", "qa", "uat"]
        requires:
          - homepage_build
        filters:
          tags:
            only: /^homepage-v.*/
          branches:
            ignore: /.*/
    - homepage_deploy:
        name: homepage_deploy_<< matrix.env >>
        context: aws-non-prod
        s3: s3://homepage-assets-<< matrix.env >>.n.vroom.systems
        matrix:
          parameters:
            env: ["dev", "qa", "uat"]
        requires:
          - hold_<< matrix.env >>
        filters:
          tags:
            only: /^homepage-v.*/
          branches:
            ignore: /.*/
    - hold:
        name: hold_prod
        type: approval
        requires:
          - homepage_deploy_dev
          - homepage_deploy_qa
          - homepage_deploy_uat
        filters:
          tags:
            only: /^homepage-v.*/
          branches:
            ignore: /.*/
    # FIT-541
    # This is a stopgap until we can figure out how to deploy to prod using MLP 3.
    # - homepage_deploy:
    - homepage_prod:
        name: homepage_deploy_prod
        context: aws-prod
        env: "prod"
        s3: s3://homepage-assets-prod.p.vroom.systems
        requires:
          - hold_prod
        filters:
          tags:
            only: /^homepage-v.*/
          branches:
            ignore: /.*/
