import { SimpleHeader } from '@vroom-web/header-components';
import { Brand, ThemeProvider } from '@vroom-web/ui';
import { NextPage, NextPageContext } from 'next';
import React from 'react';

import Page from 'src/Page';

interface Props {
  brand: Brand;
}

const { publicRuntimeConfig } = getConfig();

const {{properCase name}}Page: NextPage<Props> = ({ brand }) => {
  const gearboxPrivateUrl = publicRuntimeConfig.GEARBOX_PRIVATE_URL;

  return (
    <ThemeProvider brand={brand}>
      <Page brand={brand} name="{{properCase name}}">
        <SimpleHeader gearboxPrivateUrl={gearboxPrivateUrl} />
        {{properCase name}} index
      </Page>
    </ThemeProvider>
  );
};

{{properCase name}}Page.getInitialProps = async (context: NextPageContext): Promise<Props> => {
  const { req, query } = context;

  const headerBrandKey = 'x-brand';
  const brandHeader = req && req.headers[headerBrandKey];
  const queryBrand = query.brand;

  let brand = Brand.VROOM;
  const whitelabel = brandHeader || queryBrand;
  if (whitelabel === Brand.SANTANDER) brand = Brand.SANTANDER;
  else if (whitelabel === Brand.TDA) brand = Brand.TDA;

  return { brand };
};

export default {{properCase name}}Page;
